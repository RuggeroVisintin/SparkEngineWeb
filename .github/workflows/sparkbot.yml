name: SparkBot
on:
  issue_comment:
    types: [created, edited]

jobs:
  update_baselines:
    name: Update Visual Baseline
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.0-jammy
    permissions:
      contents: write
      pull-requests: write
    if: ${{github.event.issue.pull_request && contains(github.event.comment.body, '/update-baseline-visual') && (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'COLLABORATOR') }}
    steps:
      - name: Add reaction to comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'eyes'
            });

      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            core.setOutput('head-sha', pr.data.head.sha);
            core.setOutput('head-ref', pr.data.head.ref);

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_SPARKBOT_TOKEN }}
          ref: ${{ steps.pr.outputs.head-sha }}
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Update baselines for PR
        run: |
          echo "ðŸ”§ Updating baselines for PR #${{ github.event.issue.number }}..."
          npm run test:visual:update-baseline

      - name: Upload updated baselines as artifact
        uses: actions/upload-artifact@v4
        with:
          name: updated-visual-baseline-pr-${{ github.event.issue.number }}
          path: test-results/visual/snapshots/
          retention-days: 1

      - name: Trigger CI rerun
        uses: actions/github-script@v7
        env:
          HEAD_REF: ${{ steps.pr.outputs.head-ref }}
          HEAD_SHA: ${{ steps.pr.outputs.head-sha }}
        with:
          github-token: ${{ secrets.GH_SPARKBOT_TOKEN }}
          script: |
            core.info('Fetching last runs...');
            const workflowRuns = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ci.yml',
              branch: process.env.HEAD_REF,
              event: 'workflow_dispatch',
              per_page: 1,
              status: 'completed'
            });


            core.info(`Found ${workflowRuns.data.total_count} runs`);
            let rerunSuccess = false;
            if (workflowRuns.data.total_count > 0) {
              const lastRun = workflowRuns.data.workflow_runs[0];

              core.info(`Last run ID: ${lastRun.id} with conclusion: ${lastRun.conclusion}`);
              if (lastRun) {
                core.info(`Rerunning workflow run ID: ${lastRun.id}`);

                await github.rest.actions.reRunWorkflow({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: lastRun.id
                });

                core.info('Rerun triggered successfully.');
                rerunSuccess = true;
              }
            }
              
            if (!rerunSuccess) {
              core.info('Rerun failed or no suitable run found.');
            }

      - name: Add success reaction
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: '+1'
            });

      - name: Add error reaction
        uses: actions/github-script@v7
        if: failure()
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: '-1'
            });