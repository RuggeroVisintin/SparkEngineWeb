name: Visual Tests (Reusable)
on:
  workflow_call:
    inputs:
      pr_number:
        description: 'PR number'
        required: false
        type: string
      ref:
        description: 'Git ref to test'
        required: false
        type: string
        default: ${{ github.sha }}
      event_name:
        description: 'Event name for conditional logic'
        required: false
        type: string
        default: ${{ github.event_name }}
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number'
        required: true
        type: string
      ref:
        description: 'Git ref to test'
        required: true
        type: string

jobs:
  test_visual:
    name: Visual Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.0-jammy
    permissions:
      pull-requests: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Download updated baseline
        id: download_updated_baseline
        continue-on-error: true
        if: inputs.pr_number
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: sparkbot.yml
          name: updated-visual-baseline-pr-${{ inputs.pr_number }}
          path: test-results/visual/snapshots/
          if_no_artifact_found: fail

      - name: Download main baseline
        if: (inputs.event_name == 'pull_request' && steps.download_updated_baseline.outputs.found_artifact == 'false')
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ci.yml
          branch: main
          name: visual-baseline
          path: test-results/visual/snapshots/
          if_no_artifact_found: fail

      - name: Verify baseline
        id: verify_baseline
        if: inputs.pr_number || inputs.event_name == 'pull_request'
        run: |
          if [ ! -d "test-results/visual/snapshots" ] || [ "$(find test-results/visual/snapshots -name "*-ci-snapshots" -type d | wc -l)" -eq 0 ]; then
            echo "‚ùå No visual baselines found!"
            echo ""
            echo "New Baseline will be generated from main branch"
            echo "GENERATE_BASELINES=true" >> "$GITHUB_OUTPUT"
          else
            baseline_count=$(find test-results/visual/snapshots -name "*.png" | wc -l)
            echo "‚úÖ Found $baseline_count baseline images from main branch"
            echo "Baseline files:"
            find test-results/visual/snapshots -name "*.png" | head -5
          fi

      - name: Generate Visual Baselines
        if: steps.verify_baseline.outputs.GENERATE_BASELINES == 'true' 
        run: |
          if: steps.verify_baseline.outcome == 'failure' && (inputs.event_name == 'pull_request' || inputs.pr_number != '')
          echo "üîß Generating fresh baselines for main branch..."
          git checkout main
          git pull origin main

          npm ci
          npm run build

          npm run test:visual:update-baseline
          git checkout ${{ inputs.ref }}
          
      - name: Install dependencies
        run: npm ci   
      - name: Build project
        run: npm run build
          
      - name: Run Visual Tests
        id: visual_tests
        if: ${{ inputs.pr_number != '' || inputs.event_name == 'pull_request' }}
        continue-on-error: ${{ inputs.pr_number != '' || inputs.event_name == 'pull_request' }}
        run: |
          # PR branch: Run tests against downloaded baselines
          echo "Running visual tests against main branch baselines"
          npm run test:visual
          
      - name: Upload Generated Baselines
        if: steps.visual_tests.outputs.GENERATE_BASELINES == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: visual-baseline
          path: test-results/visual/snapshots/
          retention-days: 7
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: test-results/visual/reports/html/
          retention-days: 3
      - uses: actions/upload-artifact@v4
        if: steps.visual_tests.outcome == 'failure'
        with:
          name: visual-test-results
          path: test-results/visual/reports/html/
          retention-days: 3
      - name: Fail job if visual tests failed
        if: steps.visual_tests.outcome == 'failure'
        run: |
          echo "‚ùå Visual tests failed!"
          echo "Check the visual report and artifacts for details."
          exit 1
