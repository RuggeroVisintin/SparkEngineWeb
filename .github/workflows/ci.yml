name: Continuos Integration
on:
    push:
      branches:
        - main
    workflow_dispatch:
    pull_request:

jobs:
    build:
      name: Build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
  
        - name: install
          run: npm ci
        
        - name: eslint
          run: npm run lint
          
        - name: build
          run: npm run build
    test_unit:
      name: Unit Tests
      runs-on: ubuntu-latest
  
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
  
        - name: install
          run: npm ci
  
        - name: test
          run: npm run test:ci

        - name: issue badge
          run: |
            mkdir -p .github/pages/badges
            npx make-coverage-badge --report-path .coverage/coverage-summary.json --output-path .github/pages/badges/coverage.badge.svg
          
        - uses: actions/upload-artifact@v4
          with:
            name: coverage-badge-artifact
            path: .github/pages/badges/coverage.badge.svg
    test_perf:
      name: Performance Tests
      runs-on: ubuntu-latest
      permissions:
        pull-requests: write

      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
  
        - name: install
          run: npm ci
  
        - name: test
          id: perf_test
          run: |
            npm run test:perf:ci

        - name: attach report
          if: github.event.number
          uses: thollander/actions-comment-pull-request@v2
          with:
            pr_number: ${{ github.event.number }}
            filePath: .benchmark
            mode: recreate
            comment_tag: benchmark_comment
            create_if_not_exists: true
    test_visual:
      name: Visual Regression Tests
      timeout-minutes: 5
      runs-on: ubuntu-latest
      permissions:
        pull-requests: write
        contents: read
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
        - name: Install dependencies
          run: npm ci
        - name: Build project
          run: npm run build
        - name: Install Playwright Browsers
          run: npx playwright install --with-deps chromium
        - name: Run Visual Tests
          id: visual_tests
          continue-on-error: true
          run: npm run test:visual:ci
        - name: Create Visual Test Summary
          if: steps.visual_tests.outcome == 'failure' && github.event.number
          run: |
            echo "## 🎨 Visual Regression Test Results" > visual-summary.md
            echo "" >> visual-summary.md
            echo "❌ **Visual tests failed!** Some screenshots don't match the expected baselines." >> visual-summary.md
            echo "" >> visual-summary.md
            
            # Find all diff images and add them to the summary
            if [ -d "test-results" ]; then
              echo "### 📸 Visual Differences Found:" >> visual-summary.md
              echo "" >> visual-summary.md
              
              # Count total diff images
              diff_count=$(find test-results -name "*-diff.png" | wc -l)
              echo "Found $diff_count visual difference(s)" >> visual-summary.md
              echo "" >> visual-summary.md
              
              # List all test failures and embed images
              find test-results -name "*-diff.png" | head -5 | while read -r diff_image; do
                # Extract test name from path
                test_name=$(basename "$(dirname "$diff_image")")
                echo "#### ❌ $test_name" >> visual-summary.md
                echo "" >> visual-summary.md
                
                # Convert diff image to base64 and embed
                if [ -f "$diff_image" ]; then
                  echo "**🔴 Visual Difference:**" >> visual-summary.md
                  echo "" >> visual-summary.md
                  diff_base64=$(base64 -i "$diff_image")
                  echo "![Visual Diff](data:image/png;base64,$diff_base64)" >> visual-summary.md
                  echo "" >> visual-summary.md
                fi
                
                # Check for actual and expected images
                actual_image=$(echo "$diff_image" | sed 's/-diff\.png$/-actual.png/')
                expected_image=$(echo "$diff_image" | sed 's/-diff\.png$/-expected.png/')
                
                if [ -f "$actual_image" ]; then
                  echo "**📷 Actual Result:**" >> visual-summary.md
                  echo "" >> visual-summary.md
                  actual_base64=$(base64 -i "$actual_image")
                  echo "![Actual Result](data:image/png;base64,$actual_base64)" >> visual-summary.md
                  echo "" >> visual-summary.md
                fi
                
                if [ -f "$expected_image" ]; then
                  echo "**✅ Expected Result:**" >> visual-summary.md
                  echo "" >> visual-summary.md
                  expected_base64=$(base64 -i "$expected_image")
                  echo "![Expected Result](data:image/png;base64,$expected_base64)" >> visual-summary.md
                  echo "" >> visual-summary.md
                fi
                
                echo "---" >> visual-summary.md
                echo "" >> visual-summary.md
              done
              
              if [ $diff_count -gt 5 ]; then
                echo "**Note:** Only showing first 5 failures. Total failures: $diff_count" >> visual-summary.md
                echo "" >> visual-summary.md
                echo "📎 **[Download visual-test-results artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})** to see all images" >> visual-summary.md
                echo "" >> visual-summary.md
              fi
            else
              echo "⚠️ No test-results directory found. Check the test execution." >> visual-summary.md
            fi
            
            echo "" >> visual-summary.md
            echo "### 🛠️ Next Steps:" >> visual-summary.md
            echo "1. **Review the visual differences** shown above" >> visual-summary.md
            echo "2. **If changes are intentional**: Update baselines with \`npm run test:visual:update-baseline\`" >> visual-summary.md
            echo "3. **If changes are bugs**: Fix the rendering issue in your code" >> visual-summary.md
            echo "4. **Re-run tests** to verify the fix" >> visual-summary.md
            
        - name: Comment PR with Visual Results
          if: steps.visual_tests.outcome == 'failure' && github.event.number
          uses: thollander/actions-comment-pull-request@v2
          with:
            pr_number: ${{ github.event.number }}
            filePath: visual-summary.md
            mode: recreate
            comment_tag: visual_regression_report
            create_if_not_exists: true
        - uses: actions/upload-artifact@v4
          if: always()
          with:
            name: playwright-report
            path: playwright-report/
            retention-days: 30
        - uses: actions/upload-artifact@v4
          if: steps.visual_tests.outcome == 'failure'
          with:
            name: visual-test-results
            path: test-results/
            retention-days: 30
        - name: Fail job if visual tests failed
          if: steps.visual_tests.outcome == 'failure'
          run: |
            echo "❌ Visual tests failed!"
            echo "Check the visual report and artifacts for details."
            exit 1
    publish:
      name: Publish
      timeout-minutes: 2
      runs-on: ubuntu-latest
      permissions: 
        contents: write
        pull-requests: write
        pages: write
        id-token: write
      steps:
        - uses: googleapis/release-please-action@v4
          id: release
          with:
            # this assumes that you have created a personal access token
            # (PAT) and configured it as a GitHub action secret named
            # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
            token: ${{ secrets.GITHUB_TOKEN }}
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
        - uses: actions/download-artifact@master
          with:
            name: coverage-badge-artifact
            path: .github/pages/badges/coverage.badge.svg
        - name: install
          run: npm ci
        - name: build web bundle
          run: npm run build
        - name: build lib
          run: npm run build:lib
        - name: upload release artifact
          if: ${{ steps.release.outputs.release_created }}
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            tar -czvf "${{ steps.release.outputs.tag_name }}-jsbundle.tar.gz" -C dist/jsbundle .
            tar -czvf "${{ steps.release.outputs.tag_name }}-lib.tar.gz" -C dist/lib .
            gh release upload ${{ steps.release.outputs.tag_name }} "${{ steps.release.outputs.tag_name }}-jsbundle.tar.gz"
            gh release upload ${{ steps.release.outputs.tag_name }} "${{ steps.release.outputs.tag_name }}-lib.tar.gz"
        - name: build docs
          id: docs
          if: ${{ steps.release.outputs.prs_created != true || steps.release.outputs.releases_created == true }}
          run: |
            npm run build:docs
            mkdir -p .github/pages/
            cp -r docs/tsdoc/* .github/pages/
            echo "docs_created=true" >> "$GITHUB_OUTPUT"
        - name: Setup Pages
          if: ${{ steps.docs.outputs.docs_created }}
          uses: actions/configure-pages@v5
        - name: upload docs artifact
          if: ${{ steps.docs.outputs.docs_created }}
          uses: actions/upload-pages-artifact@v3
          with: 
            path: ".github/pages/"
        - name: deploy docs artifact
          if: ${{ steps.docs.outputs.docs_created }}
          uses: actions/deploy-pages@v4
      needs: [test_unit, test_visual, build]
      if: github.ref_name == 'main'

        
        
