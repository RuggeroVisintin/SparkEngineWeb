name: Continuos Integration
on:
    push:
      branches:
        - main
    workflow_dispatch:
    pull_request:

jobs:
    build:
      name: Build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
  
        - name: install
          run: npm ci
        
        - name: eslint
          run: npm run lint
          
        - name: build
          run: npm run build
    test_unit:
      name: Unit Tests
      runs-on: ubuntu-latest
  
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
  
        - name: install
          run: npm ci
  
        - name: test
          run: npm run test:ci

        - name: issue badge
          run: |
            mkdir -p .github/pages/badges
            npx make-coverage-badge --report-path .coverage/coverage-summary.json --output-path .github/pages/badges/coverage.badge.svg
          
        - uses: actions/upload-artifact@v4
          with:
            name: coverage-badge-artifact
            path: .github/pages/badges/coverage.badge.svg
    test_perf:
      name: Performance Tests
      runs-on: ubuntu-latest
      permissions:
        pull-requests: write

      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
  
        - name: install
          run: npm ci
  
        - name: test
          id: perf_test
          run: |
            npm run test:perf:ci

        - name: attach report
          if: github.event.number
          uses: thollander/actions-comment-pull-request@v2
          with:
            pr_number: ${{ github.event.number }}
            filePath: .benchmark
            mode: recreate
            comment_tag: benchmark_comment
            create_if_not_exists: true
    test_visual:
      name: Visual Regression Tests
      timeout-minutes: 5
      runs-on: ubuntu-latest
      permissions:
        pull-requests: write
        contents: read
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
        - name: Install dependencies
          run: npm ci
        - name: Build project
          run: npm run build
        - name: Install Playwright Browsers
          run: npx playwright install --with-deps chromium
        - name: Run Visual Tests
          id: visual_tests
          continue-on-error: true
          run: npm run test:visual:ci
        - name: Add PR Context to Report
          if: steps.visual_tests.outcome == 'failure' && github.event.number
          run: |
            # Add PR context header to the HTML report
            PR_HEADER='<div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; margin: 0; text-align: center; border-radius: 0;"><h1 style="margin: 0; color: white;">🎨 Visual Test Results for PR #${{ github.event.number }}</h1><p style="margin: 10px 0 0 0; opacity: 0.9;"><a href="https://github.com/RuggeroVisintin/SparkEngineWeb/pull/${{ github.event.number }}" style="color: white;">View Pull Request →</a></p></div>'
            
            # Insert header after opening body tag
            sed -i "/<body>/a\\$PR_HEADER" playwright-report/index.html
        - name: Prepare Visual Report for GitHub Pages
          if: steps.visual_tests.outcome == 'failure' && github.event.number
          run: |
            # Create a temporary directory for Pages content
            mkdir -p pages-deploy/visual-reports/pr-${{ github.event.number }}
            
            # Copy the Playwright report to the PR-specific directory
            cp -r playwright-report/* pages-deploy/visual-reports/pr-${{ github.event.number }}/
            
            # Copy the index page to the visual-reports root
            cp visual-reports-index.html pages-deploy/visual-reports/index.html
        - name: Deploy Visual Report to GitHub Pages
          if: steps.visual_tests.outcome == 'failure' && github.event.number
          uses: peaceiris/actions-gh-pages@v3
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./pages-deploy
            keep_files: true
            enable_jekyll: false
        - name: Comment PR with Visual Report Link
          if: steps.visual_tests.outcome == 'failure' && github.event.number
          uses: thollander/actions-comment-pull-request@v2
          with:
            pr_number: ${{ github.event.number }}
            message: |
              ## 🎨 Visual Regression Test Results
              
              ❌ **Visual tests failed!** Some screenshots don't match the expected baselines.
              
              📊 **[View Interactive Visual Report](https://ruggerovisintin.github.io/SparkEngineWeb/visual-reports/pr-${{ github.event.number }})**
              
              The Playwright HTML report shows:
              - 🖼️ Side-by-side image comparisons
              - 📊 Test timeline and details  
              - 🔍 Click to zoom on differences
              - 📋 Full test execution logs
              
              ### 🛠️ Next Steps:
              1. **Review the visual differences** in the report above
              2. **If changes are intentional**: Update baselines with `npm run test:visual:update-baseline`
              3. **If changes are bugs**: Fix the rendering issue in your code
              4. **Re-run tests** to verify the fix
            mode: recreate
            comment_tag: visual_regression_report
            create_if_not_exists: true
        - uses: actions/upload-artifact@v4
          if: always()
          with:
            name: playwright-report
            path: playwright-report/
            retention-days: 30
        - uses: actions/upload-artifact@v4
          if: steps.visual_tests.outcome == 'failure'
          with:
            name: visual-test-results
            path: test-results/
            retention-days: 30
        - name: Fail job if visual tests failed
          if: steps.visual_tests.outcome == 'failure'
          run: |
            echo "❌ Visual tests failed!"
            echo "Check the visual report and artifacts for details."
            exit 1
    publish:
      name: Publish
      timeout-minutes: 2
      runs-on: ubuntu-latest
      permissions: 
        contents: write
        pull-requests: write
        pages: write
        id-token: write
      steps:
        - uses: googleapis/release-please-action@v4
          id: release
          with:
            # this assumes that you have created a personal access token
            # (PAT) and configured it as a GitHub action secret named
            # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
            token: ${{ secrets.GITHUB_TOKEN }}
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: 20
        - uses: actions/download-artifact@master
          with:
            name: coverage-badge-artifact
            path: .github/pages/badges/coverage.badge.svg
        - name: install
          run: npm ci
        - name: build web bundle
          run: npm run build
        - name: build lib
          run: npm run build:lib
        - name: upload release artifact
          if: ${{ steps.release.outputs.release_created }}
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            tar -czvf "${{ steps.release.outputs.tag_name }}-jsbundle.tar.gz" -C dist/jsbundle .
            tar -czvf "${{ steps.release.outputs.tag_name }}-lib.tar.gz" -C dist/lib .
            gh release upload ${{ steps.release.outputs.tag_name }} "${{ steps.release.outputs.tag_name }}-jsbundle.tar.gz"
            gh release upload ${{ steps.release.outputs.tag_name }} "${{ steps.release.outputs.tag_name }}-lib.tar.gz"
        - name: build docs
          id: docs
          if: ${{ steps.release.outputs.prs_created != true || steps.release.outputs.releases_created == true }}
          run: |
            npm run build:docs
            mkdir -p .github/pages/
            cp -r docs/tsdoc/* .github/pages/
            echo "docs_created=true" >> "$GITHUB_OUTPUT"
        - name: Setup Pages
          if: ${{ steps.docs.outputs.docs_created }}
          uses: actions/configure-pages@v5
        - name: upload docs artifact
          if: ${{ steps.docs.outputs.docs_created }}
          uses: actions/upload-pages-artifact@v3
          with: 
            path: ".github/pages/"
        - name: deploy docs artifact
          if: ${{ steps.docs.outputs.docs_created }}
          uses: actions/deploy-pages@v4
      needs: [test_unit, test_visual, build]
      if: github.ref_name == 'main'

        
        
